// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/groups": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех групп, где текущий авторизованный пользователь является создателем. В ответе также будет количество участников.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Получить группы, созданные пользователем",
                "responses": {
                    "200": {
                        "description": "Список групп администратора",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.AdminGroupResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/UploadPhoto": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Загружает фотографию в хранилище и возвращает URL. Этот URL затем можно использовать для создания или обновления данных сущности (например, группы).",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Загрузка фотографии",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Изображение для загрузки (JPG, PNG, максимум 10MB)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL загруженного изображения",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Файл не предоставлен, имеет неверный тип или размер",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/requests/all/{groupId}/approveAll": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Одобрение всех заявок на вступление в закрытую группу. Только админ может это сделать.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Одобрить все заявки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все заявки одобрены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка: нет ожидающих заявок или уже обработаны",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Вы не админ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/requests/all/{groupId}/rejectAll": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Отклонение всех заявок на вступление в закрытую группу. Только админ может это сделать.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Отклонить все заявки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все заявки отклонены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка: нет ожидающих заявок",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Вы не админ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/requests/{requestId}/approve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Одобрение заявки на вступление в закрытую группу. Только админ может это сделать.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Одобрить заявку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка одобрена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка: заявка не найдена или уже обработана",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Вы не админ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/requests/{requestId}/reject": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Отклонение заявки на вступление в закрытую группу. Только админ может это сделать.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Отклонить заявку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка отклонена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка: заявка не найдена или уже обработана",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Вы не админ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/requestsForUser": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Администратор группы отправляет приглашение (заявку) указанному пользователю на вступление в группу.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Отправить приглашение пользователю в группу",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID группы, в которую отправляется приглашение",
                        "name": "group_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 2,
                        "description": "ID пользователя, которому отправляется приглашение",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка на вступление отправлена",
                        "schema": {
                            "$ref": "#/definitions/services.JoinGroupResult"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав администратора",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь или группа не найдены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/{groupId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет группу. Только администратор группы может удалить её. Удаляются также участники и заявки на вступление.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Удаление группы",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Группа успешно удалена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID группы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав или группа не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет администратору группы изменить её данные, включая контакты. Контакты передаются строкой в формате \"название:ссылка, название:ссылка\". Чтобы удалить все контакты, передайте пустую строку.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Обновить информацию о группе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные группы. Для контактов используйте формат: 'vk:https://vk.com/mygroup, tg:https://t.me/mygroup'",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.GroupUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Группа успешно обновлена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или некорректный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав на редактирование",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Группа не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/{groupId}/infGroup": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает детальную информацию о группе, созданной пользователем, включая заявки на вступление и сессии в статусе 'Набор'. Доступно только создателю группы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Получить детальную информацию о группе для администратора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о группе",
                        "schema": {
                            "$ref": "#/definitions/services.AdminGroupInfResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID группы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (пользователь не является создателем)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Группа не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/groups/{groupId}/members/{userId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет участника из группы, если текущий пользователь — админ или оператор",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Удалить участника из группы",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя, которого нужно удалить",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь удалён из группы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав на удаление",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден или не в группе",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/sessions/{sessionId}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет администратору группы изменить данные сессии, принадлежащей этой группе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии_админ"
                ],
                "summary": "Обновить информацию о сессии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сессии",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные сессии",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.SessionUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сессия успешно обновлена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или некорректный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав на редактирование",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/createGroup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новую группу. Контакты передаются строкой в формате \"название:ссылка, название:ссылка\". Примеры: \"vk:https://vk.com/mygroup, tg:https://t.me/mygroup, inst:https://instagram.com/mygroup\"",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups_admin"
                ],
                "summary": "Создание группы",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"Моя группа\"",
                        "description": "Название группы",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Подробное описание того, чем занимается группа\"",
                        "description": "Полное описание группы",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Краткое описание\"",
                        "description": "Короткое описание",
                        "name": "smallDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Москва\"",
                        "description": "Город локации группы (опционально)",
                        "name": "city",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Категории группы (массив ID категорий)",
                        "name": "categories",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Приватная ли группа (true/false)",
                        "name": "isPrivate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображение группы (JPG, PNG, максимум 10MB)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"vk:https://vk.com/mygroup, tg:https://t.me/mygroup\"",
                        "description": "Контакты в формате 'название:ссылка, название:ссылка'. Поддерживаются любые названия соц. сетей",
                        "name": "contacts",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Группа успешно создана",
                        "schema": {
                            "$ref": "#/definitions/groups.Group"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные или ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/joinToGroup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Новый пользователь присоединяется к группе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Присоединение к группе",
                "parameters": [
                    {
                        "description": "Данные для присоединения к группе",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.JoinGroupInputDoc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ: вступил или заявка отправлена",
                        "schema": {
                            "$ref": "#/definitions/handlers.JoinGroupResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/requests/{groupId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение всех заявок на вступление в закрытые группы, где текущий пользователь является администратором",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Получить заявки на вступление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заявок",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetJoinRequestsResponseDoc"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет доступа или пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Поиск групп по названию, категориям и с сортировкой (с пагинацией).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Поиск групп",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название группы для поиска",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по категории",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле сортировки: members (по числу участников), date (по дате регистрации), category (по имени категории)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Порядок сортировки: asc или desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы (\u003e=1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный поиск",
                        "schema": {
                            "$ref": "#/definitions/services.GetGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный номер страницы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{groupId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получает информацию о группе по ID, включая список участников, категории, контакты и сессии. Для приватных групп требуется членство.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Получить информацию о группе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о группе",
                        "schema": {
                            "$ref": "#/definitions/services.GroupInf"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID группы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ к приватной группе запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Группа не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{groupId}/leave": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет текущего пользователя из группы. Админ не может покинуть группу, если он единственный админ.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Покинуть группу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вы покинули группу",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка — пользователь не найден, не состоит в группе или единственный админ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/news": {
            "get": {
                "description": "Возвращает постраничный список новостей, отсортированных по дате создания.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Получить список новостей",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Постраничный список новостей",
                        "schema": {
                            "$ref": "#/definitions/services.NewsPage"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новую новость вместе с текстом. Доступно только администраторам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Создание новости",
                "parameters": [
                    {
                        "description": "Данные для создания новости",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateNewsInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Новость успешно создана",
                        "schema": {
                            "$ref": "#/definitions/news.News"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные или ошибка валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован или не является администратором",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/news/{id}": {
            "get": {
                "description": "Возвращает новость по ID с текстом и комментариями (с ником и картинкой юзера)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Получение новости",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Новость с текстом и комментариями",
                        "schema": {
                            "$ref": "#/definitions/services.NewsDTO"
                        }
                    },
                    "404": {
                        "description": "Новость не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/news/{id}/comments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт комментарий для новости (только авторизованные пользователи)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Добавить комментарий",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Комментарий",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/news.Comments"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/news/{newsId}/comments/{commentId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет комментарий (только для администраторов)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Удалить комментарий",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "newsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/createSession": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает сессию в группе с возможностью загрузки изображения и добавления метаданных",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Создание новой сессии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название сессии",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип сессии",
                        "name": "session_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Типа проведения сессии",
                        "name": "session_place",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Время начала (в формате RFC3339, напр. 2025-07-10T19:00:00+02:00)",
                        "name": "start_time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Длительность в минутах",
                        "name": "duration",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальное количество участников",
                        "name": "count_users",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Жанры (через запятую, напр: драма,комедия)",
                        "name": "genres",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Доп. поля (напр: ключ:значение,ключ2:знач2)",
                        "name": "fields",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Место проведения",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Год (например: 2023)",
                        "name": "year",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Страна",
                        "name": "country",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Возрастное ограничение (напр: 16+)",
                        "name": "age_limit",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Примечания",
                        "name": "notes",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Изображение",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сессия создана",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не передан JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера или валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/genres": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех доступных жанров для сессий.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Получение списка жанров",
                "responses": {
                    "200": {
                        "description": "Список жанров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/join": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет пользователю присоединиться к выбранной сессии, если она не заполнена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Присоединение к сессии",
                "parameters": [
                    {
                        "description": "Данные для присоединения к группе",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SessionJoinInputDoc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вы успешно присоединились к сессии",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка разбора формы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия или пользователь не найдены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Сессия заполнена или пользователь уже присоединился",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/register": {
            "post": {
                "description": "Создает сессию для подтверждения email пользователя при регистрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Создать сессию регистрации",
                "parameters": [
                    {
                        "description": "Email пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SessionEmailInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SessionRegResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/sessions/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет сессию, если пользователь является admin или operator в группе",
                "tags": [
                    "Сессии"
                ],
                "summary": "Удаление сессии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сессии для удаления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сессия удалена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "JWT не передан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера или БД",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/verify": {
            "patch": {
                "description": "Проверяет код сессии, отправленный на email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Проверить сессию",
                "parameters": [
                    {
                        "description": "Данные сессии для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.VerifySessionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionId}/leave": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет пользователю покинуть сессию, в которой он участвует",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Отписаться от сессии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сессии",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вы успешно покинули сессию",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Вы не состоите в сессии или нет доступа",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "description": "Регистрирует нового пользователя по данным из запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Создать пользователя",
                "parameters": [
                    {
                        "description": "Данные для создания пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/confirm-reset": {
            "post": {
                "description": "Пользователь вводит session_id, код из email и новый пароль. При успешной верификации пароль меняется.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Сброс пароля",
                "parameters": [
                    {
                        "description": "Данные для подтверждения и новый пароль",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ConfirmResetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет текущему авторизованному пользователю удалить свой аккаунт. Это действие необратимо.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Удаление аккаунта пользователя",
                "responses": {
                    "200": {
                        "description": "Аккаунт успешно удалён",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка (например, пользователь не найден)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/inf": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полную информацию о текущем авторизованном пользователе, включая его сессии и статистику.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Получить информацию о текущем пользователе",
                "responses": {
                    "200": {
                        "description": "Полная информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/services.InformationAboutUser"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/inf/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полную информацию о текущем авторизованном пользователе, включая его сессии и статистику.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Получить информацию о другом пользователе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Полная информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/services.InformationAboutUser"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/invites/{id}/approve": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Принимает приглашение в группу по его ID. Пользователь добавляется в участники группы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Принять приглашение в группу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приглашения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Приглашение успешно принято",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или ошибка обработки приглашения (например, уже обработано или нет доступа)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/invites/{id}/reject": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Отклоняет приглашение в группу по его ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Отклонить приглашение в группу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приглашения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Приглашение успешно отклонено",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или ошибка обработки приглашения (например, уже обработано или нет доступа)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "description": "Проверяет email и пароль, возвращает access и refresh токены",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токены успешно созданы",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный JSON или параметры",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Неверный пароль",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/notifications/viewed": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Помечает указанное уведомление как просмотренное для текущего пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Отметить уведомление как просмотренное",
                "parameters": [
                    {
                        "description": "ID уведомления для отметки",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Уведомление успешно отмечено как просмотренное",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или уведомление не найдено",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/notify": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список непросмотренных уведомлений и ожидающих приглашений в группы для текущего пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Получить уведомления пользователя",
                "responses": {
                    "200": {
                        "description": "Список уведомлений и приглашений",
                        "schema": {
                            "$ref": "#/definitions/services.GetNotifyResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет пароль для текущего авторизованного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Смена пароля пользователя",
                "parameters": [
                    {
                        "description": "Новый пароль",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/refresh": {
            "post": {
                "description": "По refresh токену выдает новые access и refresh токены",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токенов",
                "parameters": [
                    {
                        "description": "Refresh токен",
                        "name": "refreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Новые токены успешно созданы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Отсутствует или неверный refresh_token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Невалидный или просроченный refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/request-reset": {
            "post": {
                "description": "Пользователь указывает email, на него отправляется код подтверждения для смены пароля.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Запрос на сброс пароля",
                "parameters": [
                    {
                        "description": "Email пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SessionRegResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Поиск пользователей по имени с пагинацией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Поиск пользователей",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя для поиска",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный поиск",
                        "schema": {
                            "$ref": "#/definitions/services.GetUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный номер страницы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/sessions/popular": {
            "get": {
                "description": "Возвращает 10 самых популярных сессий из кэша Redis (обновляется каждые 4 часа)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получение данных о сессиях"
                ],
                "summary": "Получение популярных сессий",
                "responses": {
                    "200": {
                        "description": "Список популярных сессий из кэша",
                        "schema": {
                            "$ref": "#/definitions/handlers.CachedPopularSessionsDoc"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/sessions/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Поиск сессий по заданным критериям",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получение данных о сессиях"
                ],
                "summary": "Поиск сессий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос для поиска по названию сессии",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID категории сессии (session_type_id)",
                        "name": "categoryID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип места проведения сессии",
                        "name": "sessionType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по городу (берётся из метаданных Mongo)",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы (начиная с 1)",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Критерий сортировки: date, users или city",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки: asc или desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Если true — возвращаются только новые сессии (созданные сегодня)",
                        "name": "new_only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных сессий",
                        "schema": {
                            "$ref": "#/definitions/services.PaginatedSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не передан JWT токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/sessions/user-groups": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список сессий со статусом \"Набор\" из групп, в которых состоит пользователь, с пагинацией (9 сессий на страницу)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получение данных о сессиях"
                ],
                "summary": "Получить сессии пользователя из групп",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сессии успешно получены",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.SessionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/sessions/{sessionId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает подробную информацию о сессии, включая метаданные",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получение данных о сессиях"
                ],
                "summary": "Получить детальную информацию о сессии",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Уникальный идентификатор сессии",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение информации о сессии",
                        "schema": {
                            "$ref": "#/definitions/services.SessionDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибки аутентификации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/subscriptions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список групп, на которые подписан пользователь, исключая группы, созданные им.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Получить подписки пользователя на группы",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя (опционально)",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп, на которые подписан пользователь",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.GroupResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Не передан jwt",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Нет прав",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/tiles": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет пользователю настроить, какие плитки статистики будут отображаться в его профиле.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Изменить порядок отображения плиток статистики",
                "parameters": [
                    {
                        "description": "Новые настройки для плиток статистики",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ChangeTilesPatternInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Порядок плиток изменен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/user/profile": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет имя, us (юзернейм) или изображение текущего пользователя. Поля в теле запроса опциональны.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users inf"
                ],
                "summary": "Обновить профиль пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль успешно обновлен",
                        "schema": {
                            "type": "object",
                            "properties": {
                                " user": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "image": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "us": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные или ошибка (например, us уже занят)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{us}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации о пользователе по значению поля \"us\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by us",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User us",
                        "name": "us",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "groups.Group": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groups.GroupContact"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "creater": {
                    "$ref": "#/definitions/models.User"
                },
                "createrId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "nameGroup": {
                    "type": "string"
                },
                "smallDescription": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "groups.GroupContact": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "admin_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.AdminGroupResponse"
                    }
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.CachedPopularSessionsDoc": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.PopularSessionResponseDoc"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.ChangePasswordInput": {
            "type": "object",
            "required": [
                "new_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                }
            }
        },
        "handlers.GetJoinRequestsResponseDoc": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.GroupJoinRequestDoc"
                    }
                }
            }
        },
        "handlers.GroupJoinRequestDoc": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/handlers.GroupPreviewDoc"
                },
                "groupId": {
                    "type": "integer",
                    "example": 5
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "user": {
                    "$ref": "#/definitions/handlers.UserPreviewDoc"
                },
                "userId": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "handlers.GroupPreviewDoc": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 5
                },
                "image": {
                    "type": "string",
                    "example": "https://img.com/group.png"
                },
                "name": {
                    "type": "string",
                    "example": "Закрытая группа"
                }
            }
        },
        "handlers.JoinGroupInputDoc": {
            "type": "object",
            "required": [
                "groupId"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                }
            }
        },
        "handlers.JoinGroupResponseDoc": {
            "type": "object",
            "properties": {
                "joined": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Заявка на вступление отправлена"
                }
            }
        },
        "handlers.PopularSessionResponseDoc": {
            "type": "object",
            "properties": {
                "count_users_max": {
                    "type": "integer"
                },
                "current_users": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "popularity_rate": {
                    "type": "number"
                },
                "session_place": {
                    "type": "string"
                },
                "session_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.RefreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.SessionEmailInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "handlers.SessionJoinInputDoc": {
            "type": "object",
            "required": [
                "group_id",
                "session_id"
            ],
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.UserPreviewDoc": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "ivan@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 42
                },
                "image": {
                    "type": "string",
                    "example": "https://img.com/avatar.png"
                },
                "name": {
                    "type": "string",
                    "example": "Иван"
                }
            }
        },
        "handlers.UserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SessionRegResponse": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "us"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "data_register": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enterprise": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "us": {
                    "type": "string"
                }
            }
        },
        "news.Comments": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "news_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "news.ContentNews": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "news_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "news.News": {
            "type": "object",
            "required": [
                "description",
                "image",
                "title"
            ],
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/news.Comments"
                    }
                },
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/news.ContentNews"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "services.AdminGroupInfResponse": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.GroupJoinRequestRes"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.Contacts"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.SessionResponse"
                    }
                },
                "small_description": {
                    "type": "string"
                }
            }
        },
        "services.AdminGroupResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "member_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "small_description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "services.ChangeTilesPatternInput": {
            "type": "object",
            "properties": {
                "count_all": {
                    "type": "boolean"
                },
                "count_films": {
                    "type": "boolean"
                },
                "count_games": {
                    "type": "boolean"
                },
                "count_other": {
                    "type": "boolean"
                },
                "count_table": {
                    "type": "boolean"
                },
                "spent_time": {
                    "type": "boolean"
                }
            }
        },
        "services.CommentDTO": {
            "type": "object",
            "properties": {
                "created_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "services.ConfirmResetPasswordInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "session_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "services.Contacts": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.CreateCommentInput": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "services.CreateNewsInput": {
            "type": "object",
            "required": [
                "description",
                "image",
                "text",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.CreateUserInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "session_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5
                },
                "password": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "services.GenreStats": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.GetGroups": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "count": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.GetGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.GetGroups"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "services.GetNotifyResponse": {
            "type": "object",
            "properties": {
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.InviteDTO"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.NotificationDTO"
                    }
                }
            }
        },
        "services.GetUsers": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "us": {
                    "type": "string"
                }
            }
        },
        "services.GetUsersResponse": {
            "type": "object",
            "properties": {
                "has_more": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.GetUsers"
                    }
                }
            }
        },
        "services.GroupInf": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.Contacts"
                    }
                },
                "count_members": {
                    "type": "integer"
                },
                "creater": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.SessionDetailResponse"
                    }
                },
                "subscription": {
                    "type": "boolean"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.UsersGroups"
                    }
                }
            }
        },
        "services.GroupJoinRequestRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "us": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "services.GroupResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "member_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "small_description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "services.GroupUpdateInput": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contacts": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_private": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "small_description": {
                    "type": "string"
                }
            }
        },
        "services.InformationAboutUser": {
            "type": "object",
            "properties": {
                "data_register": {
                    "type": "string"
                },
                "enterprise": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "popular_genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.GenreStats"
                    }
                },
                "recent_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.SessionInfo"
                    }
                },
                "status": {
                    "type": "string"
                },
                "telegram_link": {
                    "type": "boolean"
                },
                "tiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "upcoming_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.SessionInfo"
                    }
                },
                "us": {
                    "type": "string"
                },
                "user_stats": {
                    "$ref": "#/definitions/services.UserStatsInfo"
                }
            }
        },
        "services.InviteDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "groupName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "services.JoinGroupResult": {
            "type": "object",
            "properties": {
                "joined": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "services.NewsDTO": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.CommentDTO"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.NewsPage": {
            "type": "object",
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/news.News"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "services.NotificationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "sendAt": {
                    "type": "string"
                },
                "sent": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "viewed": {
                    "type": "boolean"
                }
            }
        },
        "services.PaginatedSearchResponse": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "has_previous": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.SessionResponse"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "services.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "services.SessionDetailResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/sessions.SessionMetadata"
                },
                "session": {
                    "$ref": "#/definitions/services.SubSessionDetail"
                }
            }
        },
        "services.SessionInfo": {
            "type": "object",
            "properties": {
                "category_session": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "current_users": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "max_users": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type_session": {
                    "type": "string"
                }
            }
        },
        "services.SessionResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "default": "prikol"
                },
                "count_users_max": {
                    "type": "integer"
                },
                "current_users": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "session_place": {
                    "type": "string"
                },
                "session_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.SessionUpdateInput": {
            "type": "object",
            "properties": {
                "count_users_max": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.SubSessionDetail": {
            "type": "object",
            "properties": {
                "count_users_max": {
                    "type": "integer"
                },
                "current_users": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "session_place": {
                    "type": "string"
                },
                "session_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5
                },
                "status": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "us": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5
                }
            }
        },
        "services.UserStatsInfo": {
            "type": "object",
            "properties": {
                "count_all": {
                    "type": "integer"
                },
                "count_another": {
                    "type": "integer"
                },
                "count_create_session": {
                    "type": "integer"
                },
                "count_films": {
                    "type": "integer"
                },
                "count_games": {
                    "type": "integer"
                },
                "count_table_games": {
                    "type": "integer"
                },
                "most_big_session": {
                    "type": "integer"
                },
                "most_pop_day": {
                    "type": "string"
                },
                "series_session_count": {
                    "type": "integer"
                },
                "spent_time": {
                    "type": "integer"
                }
            }
        },
        "services.UsersGroups": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "services.VerifySessionInput": {
            "type": "object",
            "required": [
                "code",
                "session_id",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "sessions.SessionMetadata": {
            "type": "object",
            "properties": {
                "ageLimit": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "sessionID": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите токен в формате: Bearer \u003cyour_token\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
