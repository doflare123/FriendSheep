definitions:
  handlers.CreateGroupInputDoc:
    properties:
      categories:
        description: <- просто строка, swag так принимает
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      city:
        example: Москва
        type: string
      description:
        example: Полное описание
        type: string
      image:
        example: https://example.com/image.png
        type: string
      isPrivate:
        example: "true"
        type: string
      name:
        example: Моя группа
        type: string
      smallDescription:
        example: Краткое описание
        type: string
    type: object
  handlers.GetJoinRequestsResponseDoc:
    properties:
      requests:
        items:
          $ref: '#/definitions/handlers.GroupJoinRequestDoc'
        type: array
    type: object
  handlers.GroupJoinRequestDoc:
    properties:
      group:
        $ref: '#/definitions/handlers.GroupPreviewDoc'
      groupId:
        example: 5
        type: integer
      id:
        example: 3
        type: integer
      status:
        example: pending
        type: string
      user:
        $ref: '#/definitions/handlers.UserPreviewDoc'
      userId:
        example: 42
        type: integer
    type: object
  handlers.GroupPreviewDoc:
    properties:
      id:
        example: 5
        type: integer
      image:
        example: https://img.com/group.png
        type: string
      name:
        example: Закрытая группа
        type: string
    type: object
  handlers.JoinGroupInputDoc:
    properties:
      groupId:
        type: integer
    required:
    - groupId
    type: object
  handlers.JoinGroupResponseDoc:
    properties:
      joined:
        example: false
        type: boolean
      message:
        example: Заявка на вступление отправлена
        type: string
    type: object
  handlers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.SessionEmailInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.UserPreviewDoc:
    properties:
      email:
        example: ivan@example.com
        type: string
      id:
        example: 42
        type: integer
      image:
        example: https://img.com/avatar.png
        type: string
      name:
        example: Иван
        type: string
    type: object
  handlers.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.SessionRegResponse:
    properties:
      session_id:
        type: string
    type: object
  services.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      session_id:
        type: string
    required:
    - email
    - name
    - password
    - session_id
    type: object
  services.VerifySessionInput:
    properties:
      code:
        type: string
      session_id:
        type: string
      type:
        type: string
    required:
    - code
    - session_id
    - type
    type: object
info:
  contact: {}
paths:
  /api/groups/{groupId}:
    delete:
      description: Удаляет группу. Только администратор группы может удалить её. Удаляются
        также участники и заявки на вступление.
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID группы
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав или группа не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление группы
      tags:
      - groups
  /api/groups/{groupId}/leave:
    delete:
      description: Удаляет текущего пользователя из группы. Админ не может покинуть
        группу, если он единственный админ.
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Вы покинули группу
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка — пользователь не найден, не состоит в группе или единственный
            админ
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Покинуть группу
      tags:
      - groups
  /api/groups/{groupId}/members/{userId}:
    delete:
      description: Удаляет участника из группы, если текущий пользователь — админ
        или оператор
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      - description: ID пользователя, которого нужно удалить
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь удалён из группы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные параметры
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав на удаление
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден или не в группе
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить участника из группы
      tags:
      - groups
  /api/groups/createGroup:
    post:
      consumes:
      - application/json
      description: Создает новую группу
      parameters:
      - description: Данные для создания группы
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateGroupInputDoc'
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно создана
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создание группы
      tags:
      - groups
  /api/groups/joinToGroup:
    post:
      consumes:
      - application/json
      description: Новый пользователь присоединяется к группе
      parameters:
      - description: Данные для присоединения к группе
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.JoinGroupInputDoc'
      produces:
      - application/json
      responses:
        "200":
          description: 'Успешный ответ: вступил или заявка отправлена'
          schema:
            $ref: '#/definitions/handlers.JoinGroupResponseDoc'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Присоединение к группе
      tags:
      - groups
  /api/groups/requests:
    get:
      description: Получение всех заявок на вступление в закрытые группы, где текущий
        пользователь является администратором
      produces:
      - application/json
      responses:
        "200":
          description: Список заявок
          schema:
            $ref: '#/definitions/handlers.GetJoinRequestsResponseDoc'
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет доступа или пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заявки на вступление
      tags:
      - groups
  /api/groups/requests/{requestId}/approve:
    post:
      description: Одобрение заявки на вступление в закрытую группу. Только админ
        может это сделать.
      parameters:
      - description: ID заявки
        in: path
        name: requestId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заявка одобрена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'Ошибка: заявка не найдена или уже обработана'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Вы не админ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Одобрить заявку
      tags:
      - groups
  /api/groups/requests/{requestId}/reject:
    post:
      description: Отклонение заявки на вступление в закрытую группу. Только админ
        может это сделать.
      parameters:
      - description: ID заявки
        in: path
        name: requestId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заявка отклонена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'Ошибка: заявка не найдена или уже обработана'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Вы не админ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Отклонить заявку
      tags:
      - groups
  /api/sessions/createSession:
    post:
      consumes:
      - multipart/form-data
      description: Создает сессию в группе с возможностью загрузки изображения и добавления
        метаданных
      parameters:
      - description: Название сессии
        in: formData
        name: title
        required: true
        type: string
      - description: ID типа сессии
        in: formData
        name: session_type
        required: true
        type: integer
      - description: ID группы
        in: formData
        name: group_id
        required: true
        type: integer
      - description: Время начала (в формате RFC3339, напр. 2025-07-10T19:00:00+02:00)
        in: formData
        name: start_time
        required: true
        type: string
      - description: Длительность в минутах
        in: formData
        name: duration
        type: integer
      - description: Максимальное количество участников
        in: formData
        name: count_users
        required: true
        type: integer
      - description: 'Тип метаданных (например: киновечер)'
        in: formData
        name: meta_type
        type: string
      - description: 'Жанры (через запятую, напр: драма,комедия)'
        in: formData
        name: genres
        type: string
      - description: 'Доп. поля (напр: ключ:значение,ключ2:знач2)'
        in: formData
        name: fields
        type: string
      - description: Место проведения
        in: formData
        name: location
        type: string
      - description: 'Год (например: 2023)'
        in: formData
        name: year
        type: integer
      - description: Страна
        in: formData
        name: country
        type: string
      - description: 'Возрастное ограничение (напр: 16+)'
        in: formData
        name: age_limit
        type: string
      - description: Примечания
        in: formData
        name: notes
        type: string
      - description: Изображение
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Сессия создана
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Не передан JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера или валидации
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создание новой сессии
      tags:
      - Сессии
  /api/sessions/register:
    post:
      consumes:
      - application/json
      description: Создает сессию для подтверждения email пользователя при регистрации
      parameters:
      - description: Email пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.SessionEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SessionRegResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать сессию регистрации
      tags:
      - sessions
  /api/sessions/sessions/{id}:
    delete:
      description: Удаляет сессию, если пользователь является admin или operator в
        группе
      parameters:
      - description: ID сессии для удаления
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Сессия удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: JWT не передан
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Недостаточно прав
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера или БД
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление сессии
      tags:
      - Сессии
  /api/sessions/verify:
    patch:
      consumes:
      - application/json
      description: Проверяет код сессии, отправленный на email
      parameters:
      - description: Данные сессии для проверки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.VerifySessionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Too Many Requests
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Проверить сессию
      tags:
      - sessions
  /api/users:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя по данным из запроса
      parameters:
      - description: Данные для создания пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - users
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Проверяет email и пароль, возвращает access и refresh токены
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токены успешно созданы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный JSON или параметры
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверный пароль
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Аутентификация пользователя
      tags:
      - auth
  /api/users/refresh:
    post:
      consumes:
      - application/json
      description: По refresh токену выдает новые access и refresh токены
      parameters:
      - description: Refresh токен
        in: body
        name: refreshRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Новые токены успешно созданы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Отсутствует или неверный refresh_token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Невалидный или просроченный refresh token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление токенов
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: 'Введите токен в формате: Bearer <your_token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
