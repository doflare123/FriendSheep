definitions:
  handlers.CachedPopularSessionsDoc:
    properties:
      count:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/handlers.PopularSessionResponseDoc'
        type: array
      updated_at:
        type: string
    type: object
  handlers.GetJoinRequestsResponseDoc:
    properties:
      requests:
        items:
          $ref: '#/definitions/handlers.GroupJoinRequestDoc'
        type: array
    type: object
  handlers.GetNewSessionsResponse:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/services.SessionResponse'
        type: array
      total:
        type: integer
    type: object
  handlers.GroupJoinRequestDoc:
    properties:
      group:
        $ref: '#/definitions/handlers.GroupPreviewDoc'
      groupId:
        example: 5
        type: integer
      id:
        example: 3
        type: integer
      status:
        example: pending
        type: string
      user:
        $ref: '#/definitions/handlers.UserPreviewDoc'
      userId:
        example: 42
        type: integer
    type: object
  handlers.GroupPreviewDoc:
    properties:
      id:
        example: 5
        type: integer
      image:
        example: https://img.com/group.png
        type: string
      name:
        example: Закрытая группа
        type: string
    type: object
  handlers.JoinGroupInputDoc:
    properties:
      groupId:
        type: integer
    required:
    - groupId
    type: object
  handlers.JoinGroupResponseDoc:
    properties:
      joined:
        example: false
        type: boolean
      message:
        example: Заявка на вступление отправлена
        type: string
    type: object
  handlers.PopularSessionResponseDoc:
    properties:
      count_users_max:
        type: integer
      current_users:
        type: integer
      duration:
        type: integer
      end_time:
        type: string
      genres:
        items:
          type: string
        type: array
      group_name:
        type: string
      id:
        type: integer
      image_url:
        type: string
      popularity_rate:
        type: number
      session_place:
        type: string
      session_type:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  handlers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.SessionEmailInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.SessionJoinInputDoc:
    properties:
      group_id:
        type: integer
      session_id:
        type: integer
    required:
    - group_id
    - session_id
    type: object
  handlers.UserPreviewDoc:
    properties:
      email:
        example: ivan@example.com
        type: string
      id:
        example: 42
        type: integer
      image:
        example: https://img.com/avatar.png
        type: string
      name:
        example: Иван
        type: string
    type: object
  handlers.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.SessionRegResponse:
    properties:
      session_id:
        type: string
    type: object
  services.CategorySessionsResponse:
    properties:
      current_page:
        type: integer
      has_more:
        type: boolean
      sessions:
        items:
          $ref: '#/definitions/services.SessionResponse'
        type: array
      total_count:
        type: integer
    type: object
  services.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      session_id:
        type: string
    required:
    - email
    - name
    - password
    - session_id
    type: object
  services.GroupUpdateInput:
    properties:
      city:
        type: string
      description:
        type: string
      image:
        type: string
      is_private:
        type: boolean
      name:
        type: string
      small_description:
        type: string
    type: object
  services.SessionDetailResponse:
    properties:
      metadata:
        $ref: '#/definitions/sessions.SessionMetadata'
      session:
        $ref: '#/definitions/services.SubSessionDetail'
    type: object
  services.SessionResponse:
    properties:
      count_users_max:
        type: integer
      current_users:
        type: integer
      duration:
        type: integer
      genres:
        items:
          type: string
        type: array
      group_name:
        type: string
      id:
        type: integer
      image_url:
        type: string
      session_place:
        type: string
      session_type:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  services.SessionUpdateInput:
    properties:
      count_users_max:
        type: integer
      duration:
        type: integer
      image_url:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  services.SubSessionDetail:
    properties:
      count_users_max:
        type: integer
      current_users:
        type: integer
      duration:
        type: integer
      end_time:
        type: string
      group_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      session_place:
        type: string
      session_type:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  services.VerifySessionInput:
    properties:
      code:
        type: string
      session_id:
        type: string
      type:
        type: string
    required:
    - code
    - session_id
    - type
    type: object
  sessions.SessionMetadata:
    properties:
      ageLimit:
        type: string
      country:
        type: string
      fields:
        additionalProperties: true
        type: object
      genres:
        items:
          type: string
        type: array
      location:
        type: string
      notes:
        type: string
      sessionID:
        type: integer
      year:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/admin/groups/{groupId}:
    delete:
      description: Удаляет группу. Только администратор группы может удалить её. Удаляются
        также участники и заявки на вступление.
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID группы
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав или группа не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление группы
      tags:
      - groups_admin
    patch:
      consumes:
      - application/json
      description: Позволяет администратору группы изменить её данные
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      - description: Новые данные группы
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.GroupUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно обновлена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка валидации или некорректный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав на редактирование
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Группа не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить информацию о группе
      tags:
      - groups_admin
  /api/admin/groups/{groupId}/members/{userId}:
    delete:
      description: Удаляет участника из группы, если текущий пользователь — админ
        или оператор
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      - description: ID пользователя, которого нужно удалить
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь удалён из группы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные параметры
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав на удаление
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден или не в группе
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить участника из группы
      tags:
      - groups_admin
  /api/admin/groups/requests/{requestId}/approve:
    post:
      description: Одобрение заявки на вступление в закрытую группу. Только админ
        может это сделать.
      parameters:
      - description: ID заявки
        in: path
        name: requestId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заявка одобрена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'Ошибка: заявка не найдена или уже обработана'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Вы не админ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Одобрить заявку
      tags:
      - groups_admin
  /api/admin/groups/requests/{requestId}/reject:
    post:
      description: Отклонение заявки на вступление в закрытую группу. Только админ
        может это сделать.
      parameters:
      - description: ID заявки
        in: path
        name: requestId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Заявка отклонена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'Ошибка: заявка не найдена или уже обработана'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Вы не админ
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Отклонить заявку
      tags:
      - groups_admin
  /api/admin/sessions/{sessionId}:
    patch:
      consumes:
      - application/json
      description: Позволяет администратору группы изменить данные сессии, принадлежащей
        этой группе
      parameters:
      - description: ID сессии
        in: path
        name: sessionId
        required: true
        type: integer
      - description: Новые данные сессии
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.SessionUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: Сессия успешно обновлена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка валидации или некорректный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет прав на редактирование
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить информацию о сессии
      tags:
      - Сессии_админ
  /api/groups/{groupId}/leave:
    delete:
      description: Удаляет текущего пользователя из группы. Админ не может покинуть
        группу, если он единственный админ.
      parameters:
      - description: ID группы
        in: path
        name: groupId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Вы покинули группу
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка — пользователь не найден, не состоит в группе или единственный
            админ
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Покинуть группу
      tags:
      - groups
  /api/groups/createGroup:
    post:
      consumes:
      - multipart/form-data
      description: Создает новую группу
      parameters:
      - description: Название группы
        in: formData
        name: name
        required: true
        type: string
      - description: Описание группы
        in: formData
        name: description
        required: true
        type: string
      - description: Короткое описание
        in: formData
        name: smallDescription
        required: true
        type: string
      - description: Город локации группы (опционально)
        in: formData
        name: city
        type: string
      - collectionFormat: csv
        description: Категории группы (записываются в виде массива целых чисел)
        in: formData
        items:
          type: integer
        name: categories
        required: true
        type: array
      - description: Приватная ли группа
        in: formData
        name: isPrivate
        required: true
        type: boolean
      - description: Изображение
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно создана
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создание группы
      tags:
      - groups_admin
  /api/groups/joinToGroup:
    post:
      consumes:
      - application/json
      description: Новый пользователь присоединяется к группе
      parameters:
      - description: Данные для присоединения к группе
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.JoinGroupInputDoc'
      produces:
      - application/json
      responses:
        "200":
          description: 'Успешный ответ: вступил или заявка отправлена'
          schema:
            $ref: '#/definitions/handlers.JoinGroupResponseDoc'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Присоединение к группе
      tags:
      - groups
  /api/groups/requests:
    get:
      description: Получение всех заявок на вступление в закрытые группы, где текущий
        пользователь является администратором
      produces:
      - application/json
      responses:
        "200":
          description: Список заявок
          schema:
            $ref: '#/definitions/handlers.GetJoinRequestsResponseDoc'
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Нет доступа или пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заявки на вступление
      tags:
      - groups
  /api/sessions/{sessionId}/leave:
    delete:
      description: Позволяет пользователю покинуть сессию, в которой он участвует
      parameters:
      - description: ID сессии
        in: path
        name: sessionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Вы успешно покинули сессию
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Вы не состоите в сессии или нет доступа
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Отписаться от сессии
      tags:
      - Сессии
  /api/sessions/createSession:
    post:
      consumes:
      - multipart/form-data
      description: Создает сессию в группе с возможностью загрузки изображения и добавления
        метаданных
      parameters:
      - description: Название сессии
        in: formData
        name: title
        required: true
        type: string
      - description: Тип сессии
        in: formData
        name: session_type
        required: true
        type: string
      - description: Типа проведения сессии
        in: formData
        name: session_place
        required: true
        type: integer
      - description: ID группы
        in: formData
        name: group_id
        required: true
        type: integer
      - description: Время начала (в формате RFC3339, напр. 2025-07-10T19:00:00+02:00)
        in: formData
        name: start_time
        required: true
        type: string
      - description: Длительность в минутах
        in: formData
        name: duration
        type: integer
      - description: Максимальное количество участников
        in: formData
        name: count_users
        required: true
        type: integer
      - description: 'Жанры (через запятую, напр: драма,комедия)'
        in: formData
        name: genres
        type: string
      - description: 'Доп. поля (напр: ключ:значение,ключ2:знач2)'
        in: formData
        name: fields
        type: string
      - description: Место проведения
        in: formData
        name: location
        type: string
      - description: 'Год (например: 2023)'
        in: formData
        name: year
        type: integer
      - description: Страна
        in: formData
        name: country
        type: string
      - description: 'Возрастное ограничение (напр: 16+)'
        in: formData
        name: age_limit
        type: string
      - description: Примечания
        in: formData
        name: notes
        type: string
      - description: Изображение
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Сессия создана
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Не передан JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера или валидации
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создание новой сессии
      tags:
      - Сессии
  /api/sessions/join:
    post:
      consumes:
      - application/json
      description: Позволяет пользователю присоединиться к выбранной сессии, если
        она не заполнена
      parameters:
      - description: Данные для присоединения к группе
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.SessionJoinInputDoc'
      produces:
      - application/json
      responses:
        "200":
          description: Вы успешно присоединились к сессии
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка разбора формы
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Пользователь не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия или пользователь не найдены
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Сессия заполнена или пользователь уже присоединился
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Присоединение к сессии
      tags:
      - Сессии
  /api/sessions/register:
    post:
      consumes:
      - application/json
      description: Создает сессию для подтверждения email пользователя при регистрации
      parameters:
      - description: Email пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.SessionEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SessionRegResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать сессию регистрации
      tags:
      - sessions
  /api/sessions/sessions/{id}:
    delete:
      description: Удаляет сессию, если пользователь является admin или operator в
        группе
      parameters:
      - description: ID сессии для удаления
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Сессия удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: JWT не передан
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Недостаточно прав
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера или БД
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление сессии
      tags:
      - Сессии
  /api/sessions/verify:
    patch:
      consumes:
      - application/json
      description: Проверяет код сессии, отправленный на email
      parameters:
      - description: Данные сессии для проверки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.VerifySessionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Too Many Requests
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Проверить сессию
      tags:
      - sessions
  /api/users:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя по данным из запроса
      parameters:
      - description: Данные для создания пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - users
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Проверяет email и пароль, возвращает access и refresh токены
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токены успешно созданы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный JSON или параметры
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверный пароль
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Аутентификация пользователя
      tags:
      - auth
  /api/users/refresh:
    post:
      consumes:
      - application/json
      description: По refresh токену выдает новые access и refresh токены
      parameters:
      - description: Refresh токен
        in: body
        name: refreshRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Новые токены успешно созданы
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Отсутствует или неверный refresh_token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Невалидный или просроченный refresh token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление токенов
      tags:
      - auth
  /api/users/sessions/{sessionId}:
    get:
      consumes:
      - application/json
      description: Возвращает подробную информацию о сессии, включая метаданные
      parameters:
      - description: Уникальный идентификатор сессии
        in: path
        minimum: 1
        name: sessionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешное получение информации о сессии
          schema:
            $ref: '#/definitions/services.SessionDetailResponse'
        "400":
          description: Некорректные параметры запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Ошибки аутентификации
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Доступ запрещен
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить детальную информацию о сессии
      tags:
      - Получение данных о сессиях
  /api/users/sessions/category:
    get:
      consumes:
      - application/json
      description: 'Возвращает список из 10 сессий по указанной категории из открытых
        групп. Вводить вам нужно будет иметь мапу с категориями, где ключ - название
        категории, а значение - id категории. Сейчас такие значнеия: 1 - Фильмы, 2
        - Игры. 3 - Настолки, 4 - Другое'
      parameters:
      - description: ID категории сессии
        in: query
        name: category_id
        required: true
        type: integer
      - default: 1
        description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список сессий
          schema:
            $ref: '#/definitions/services.CategorySessionsResponse'
        "400":
          description: Некорректные параметры запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Пользователь не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Категория не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение сессий по категории
      tags:
      - Получение данных о сессиях
  /api/users/sessions/new:
    get:
      consumes:
      - application/json
      description: Получает новые сессии, созданные сегодня, с пагинацией по 6 штук
      parameters:
      - description: Номер страницы (по умолчанию 1)
        in: query
        minimum: 1
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список новых сессий
          schema:
            $ref: '#/definitions/handlers.GetNewSessionsResponse'
        "400":
          description: Неверные параметры запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Пользователь не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение новых сессий
      tags:
      - Получение данных о сессиях
  /api/users/sessions/popular:
    get:
      consumes:
      - application/json
      description: Возвращает 10 самых популярных сессий из кэша Redis (обновляется
        каждые 4 часа)
      produces:
      - application/json
      responses:
        "200":
          description: Список популярных сессий из кэша
          schema:
            $ref: '#/definitions/handlers.CachedPopularSessionsDoc'
        "401":
          description: Пользователь не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение популярных сессий
      tags:
      - Получение данных о сессиях
securityDefinitions:
  BearerAuth:
    description: 'Введите токен в формате: Bearer <your_token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
