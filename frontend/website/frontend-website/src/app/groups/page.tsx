"use client";

import React, { useState } from 'react';
import Image from 'next/image';
import GroupCard from '../../components/Groups/GroupCard';
import GroupsScroll from '../../components/Groups/GroupsScroll';
import CreateGroupModal from '../../components/Groups/CreateGroupModal';
import '../../styles/Groups/GroupsPage.css';

interface Group {
  id: string;
  name: string;
  description: string;
  memberCount: number;
  image?: string;
  categories: ('games' | 'movies' | 'board' | 'other')[];
  socialLinks: {
    ds?: string;
    tg?: string;
    vk?: string;
  };
  isPrivate: boolean;
  city: string;
}

export default function GroupsPage() {
  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);

  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä—É–ø–ø –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
  const managedGroups: Group[] = [
    {
      id: '1',
      name: '–ú–µ–≥–∞ –∫—Ä—É—Ç–∞—è –≥—Ä—É–ø–ø–∞',
      description: '–ú—ã –∫—Ä—É—Ç—ã–µ –ø–∞—Ü–∞–Ω—Ç—Ä–µ, —ë—ë—ë—ë—É üòé\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!',
      memberCount: 47,
      categories: ['games', 'movies'],
      socialLinks: {
        ds: 'discord.gg/example',
        tg: 't.me/example',
        vk: 'vk.com/example'
      },
      isPrivate: false,
      city: '–ú–æ—Å–∫–≤–∞'
    },
    {
      id: '2',
      name: '–ö–∏–Ω–æ–º–∞–Ω—ã –æ–±—ä–µ–¥–∏–Ω—è–π—Ç–µ—Å—å',
      description: '–û–±—Å—É–∂–¥–∞–µ–º —Ñ–∏–ª—å–º—ã, —Å–µ—Ä–∏–∞–ª—ã –∏ –≤—Å—ë —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–æ–º',
      memberCount: 123,
      categories: ['movies'],
      socialLinks: {
        tg: 't.me/cinephiles'
      },
      isPrivate: false,
      city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'
    },
    {
      id: '3',
      name: '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã –°–ü–±',
      description: '–ò–≥—Ä–∞–µ–º –≤ –Ω–∞—Å—Ç–æ–ª–∫–∏ –∫–∞–∂–¥—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ!',
      memberCount: 89,
      categories: ['board'],
      socialLinks: {
        vk: 'vk.com/boardgames_spb'
      },
      isPrivate: true,
      city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'
    }
  ];

  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
  const subscriptions: Group[] = [
    {
      id: '4',
      name: '–ì–µ–π–º–µ—Ä—ã –ú–æ—Å–∫–≤—ã',
      description: '–ö—Ä—É–ø–Ω–µ–π—à–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≥–µ–π–º–µ—Ä–æ–≤ —Å—Ç–æ–ª–∏—Ü—ã',
      memberCount: 1250,
      categories: ['games'],
      socialLinks: {
        ds: 'discord.gg/gamers_moscow',
        tg: 't.me/gamers_moscow'
      },
      isPrivate: false,
      city: '–ú–æ—Å–∫–≤–∞'
    },
    {
      id: '5',
      name: '–ö–Ω–∏–∂–Ω—ã–π –∫–ª—É–±',
      description: '–ß–∏—Ç–∞–µ–º –∏ –æ–±—Å—É–∂–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–Ω–∏–≥–∏',
      memberCount: 67,
      categories: ['other'],
      socialLinks: {
        vk: 'vk.com/bookclub'
      },
      isPrivate: false,
      city: '–ú–æ—Å–∫–≤–∞'
    }
  ];

  const handleCreateGroup = (groupData: any) => {
    console.log('Creating group:', groupData);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
    setIsCreateModalOpen(false);
  };

  return (
    <div className='bgPage h-full'>
      <div className='contentContainer'>
        {/* –ì—Ä—É–ø–ø—ã –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º */}
        <div className='section'>
          <div className='sectionHeader'>
            <h2 className='sectionTitle'>–ì—Ä—É–ø–ø—ã –ø–æ–¥ –≤–∞—à–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º</h2>
            <button 
              className='addButton'
              onClick={() => setIsCreateModalOpen(true)}
            >
              <Image
                src="/add_button.png"
                alt="Add group"
                width={24}
                height={24}
              />
            </button>
          </div>
          <GroupsScroll 
            groups={managedGroups} 
            emptyMessage="–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –≥—Ä—É–ø–ø –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º"
            actionType="manage"
          />
        </div>

        {/* –ü–æ–¥–ø–∏—Å–∫–∏ */}
        <div className='section'>
          <div className='sectionHeader'>
            <h2 className='sectionTitle'>–ü–æ–¥–ø–∏—Å–∫–∏</h2>
          </div>
          <GroupsScroll 
            groups={subscriptions}
            emptyMessage="–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫"
            actionType="subscribe"
          />
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã */}
      {isCreateModalOpen && (
        <CreateGroupModal
          onClose={() => setIsCreateModalOpen(false)}
          onSubmit={handleCreateGroup}
        />
      )}
    </div>
  );
}